import glob

compile = hancho.Command(
  desc    = "Compiling {in_src}",
  command = "g++ -std=c++20 -g -MMD -I. {opt} {warnings} -c {in_src} -o {out_obj}",

  opt = "-O0",
  #opt = "-O3",
  warnings = "-Wall -Werror -Wno-deprecated-enum-enum-conversion -Wno-unused-variable -Wno-unused-but-set-variable",
  out_obj  = "{swap_ext(in_src, '.o')}",
  depfile  = "{swap_ext(in_src, '.d')}",
)

link = hancho.Command(
  desc    = "Linking {out_bin}",
  command = "gcc -std=c++20 -g -MMD {in_objs} {libs} -o {out_bin} ",
  libs    = "-lusb-1.0 -lstdc++ -lSDL2 -lm",
)

srcs = [
  "src/Bits.cpp",
  "src/Blitter.cpp",
  "src/capture.cpp",
  "src/firmware.cpp",
  "src/GLBase.cpp",
  "src/gui.cpp",
  "src/log.cpp",
  "src/RingBuffer.cpp",
  "src/ThreadQueue.cpp",
  "src/ViewController.cpp",
  "symlinks/glad/glad.c",
  "src/TracePainter.cpp",
  "src/TraceMipper.cpp",
]

objs    = [hancho(compile, in_src = src) for src in srcs]
imgui_o = [hancho(compile, in_src = f) for f in glob.glob("symlinks/imgui/*.cpp")]
main_o  = hancho(compile, in_src = "src/main.cpp")
main    = hancho(link, in_objs = [main_o, imgui_o, objs], out_bin = "zoomytrace")
zoomy_o = hancho(compile, in_src = "src/ZoomyTrace.cpp")
zoomy   = hancho(link, in_objs = [zoomy_o, imgui_o, objs], out_bin = "zoomytest")
