import hancho

import hancho
import glob

compile = hancho.Command(
  desc    = "Compiling {in_src}",
  command = "g++ -std=c++20 -g -MMD -I. {opt} {warnings} -c {in_src} -o {out_obj}",

  opt = "-O0",
  #opt = "-O3",
  warnings = "-Wall -Werror -Wno-deprecated-enum-enum-conversion -Wno-unused-variable -Wno-unused-but-set-variable",
  out_obj  = "{swap_ext(in_src, '.o')}",
  depfile  = "{swap_ext(in_src, '.d')}",
)

link = hancho.Command(
  desc    = "Linking {out_bin}",
  command = "gcc -std=c++20 -g -MMD {in_objs} {libs} -o {out_bin} ",
  libs    = "-lusb-1.0 -lstdc++ -lSDL2 -lm",
)

imgui_o = [compile(in_src = f) for f in glob.glob("symlinks/imgui/*.cpp")]

objs = [
  compile(in_src = "src/Bits.cpp"),
  compile(in_src = "src/Blitter.cpp"),
  compile(in_src = "src/capture.cpp"),
  compile(in_src = "src/firmware.cpp"),
  compile(in_src = "src/GLBase.cpp"),
  compile(in_src = "src/gui.cpp"),
  compile(in_src = "src/log.cpp"),
  compile(in_src = "src/RingBuffer.cpp"),
  compile(in_src = "src/ThreadQueue.cpp"),
  compile(in_src = "src/ViewController.cpp"),
  compile(in_src = "symlinks/glad/glad.c"),
  compile(in_src = "src/TracePainter.cpp"),
  compile(in_src = "src/TraceMipper.cpp"),
]

main = link(
  in_objs = [
    compile(in_src = "src/main.cpp"),
    imgui_o,
    objs
  ],
  out_bin = "zoomytrace",
)

zoomy = link(
  in_objs = [
    compile(in_src = "src/ZoomyTrace.cpp"),
    imgui_o,
    objs
  ],
  out_bin = "zoomytest",
)
